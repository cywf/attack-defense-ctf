version: '3.8'
services:
  reverse-proxy:
    image: traefik:v2.6
    command:
      - "--api.debug=true"
      - "--api.dashboard=true"
      - "--api"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.openvpn.address=:1194"

    ports:
      - "80:80"
      - "1194:1194"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${HASH_ADMIN_PASS}"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - vpn-net
      - proxy

  checker:
    image: explabs/ad-ctf-paas-checker
    container_name: checker
    restart: unless-stopped
    environment:
      - ADMIN_PASS=admin
      - MONGODB=mongo:27017
    volumes:
      - ./scripts/checkers/:/checker/scripts/
      - ./configs/config.yml:/checker/config.yml
    networks:
      - service-net
    depends_on:
      - rabbit
    extra_hosts:
      - "naliway:172.17.0.1"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:5044"
        tag: "checker"

  rabbit:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=service
      - RABBITMQ_DEFAULT_PASS=${ADMIN_PASS}
    networks:
      - service-net
      - proxy
    depends_on:
      - logstash
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbit.rule=Host(`rabbitmq.${DOMAIN}`)"
      - "traefik.http.services.rabbit.loadbalancer.server.port=15672"

  exploits:
    image: explabs/ad-ctf-paas-exploits
    container_name: exploits
    restart: unless-stopped
    environment:
      - ADMIN_PASS=admin
      - MONGODB=mongo:27017
    depends_on:
      - rabbit
    volumes:
      - ./scripts/exploits:/service/exploits/
      - ./configs/config.yml:/service/config.yml
    networks:
      - service-net
    extra_hosts:
      - "naliway:172.17.0.1"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:5044"
        tag: "exploits"

  news:
    image: explabs/ad-ctf-paas-news
    container_name: news
    restart: unless-stopped
    depends_on:
      - rabbit
    environment:
      - ADMIN_PASS=$ADMIN_PASS
      - TELEGRAM_TOKEN=$TELEGRAM_TOKEN
      - TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID
    volumes:
      - ./news:/service/news/
      - ./configs/config.yml:/service/config.yml
    networks:
      - service-net

  malwaretotal:
    image: explabs/malwaretotal
    container_name: malwaretotal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.malwaretotal.rule=Host(`malwaretotal.${DOMAIN}`)"
    volumes:
      - ./configs/malwares.yml:/app/malwares.yml
    networks:
      - proxy

  api:
    image: explabs/ad-ctf-paas-api
    container_name: api
    environment:
      - ADMIN_PASS=${ADMIN_PASS}
      - SERVER_IP=${SERVER_IP}
      - OVPN_ADMIN=http://openvpn:9000
      - MONGODB=mongo:27017
      - REDIS=redis:6379
    volumes:
      - ./configs/config.yml:/api/config.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
    depends_on:
      - mongo
      - redis
      - ovpn-admin
      - openvpn
      - fileserver
      - rabbit
    networks:
      - service-net
      - vpn-net
      - proxy

  mongo:
    image: mongo:5.0
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${ADMIN_PASS}
    networks:
      - service-net

  redis:
    image: redis:6.2-alpine
    container_name: redis
    command: redis-server --requirepass ${ADMIN_PASS}
    networks:
      - service-net

  openvpn:
    image: flant/ovpn-admin:openvpn-1.7.5
    container_name: openvpn
    command: /etc/openvpn/setup/configure.sh
    cap_add:
      - NET_ADMIN
    volumes:
      - ./openvpn/setup/openvpn.conf:/etc/openvpn/setup/openvpn.conf
      - ./openvpn/easyrsa_master:/etc/openvpn/easyrsa
      - ./openvpn/ccd_master:/etc/openvpn/ccd
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ovpn-admin.rule=Host(`vpn-admin.${DOMAIN}`)"
      - "traefik.http.services.ovpn-admin.loadbalancer.server.port=9000"
      - "traefik.http.routers.ovpn-admin.middlewares=auth"
      - "traefik.tcp.routers.openvpn.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.openvpn.entrypoints=openvpn"
      - "traefik.tcp.routers.openvpn.service=openvpn"
      - "traefik.tcp.services.openvpn.loadbalancer.server.port=1194"
    networks:
      - vpn-net

  ovpn-admin:
    image: flant/ovpn-admin:1.7.5
    container_name: ovpn-admin
    command: /app/ovpn-admin --listen.port="9000" --ovpn.server="openvpn.${DOMAIN}:1194:tcp" --easyrsa.path="/mnt/easyrsa" --easyrsa.index-path="/mnt/easyrsa/pki/index.txt" --ccd --ccd.path="/mnt/ccd" --auth.password --auth.db="/mnt/easyrsa/pki/users.db"
    network_mode: service:openvpn
    volumes:
      - ./openvpn/easyrsa_master:/mnt/easyrsa
      - ./openvpn/ccd_master:/mnt/ccd

  fileserver:
    image: explabs/fileserver
    container_name: fileserver
    volumes:
      - ./tasks:/tasks
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fileserver.rule=Host(`fileserver.${DOMAIN}`)"
    restart: unless-stopped
    networks:
      - proxy
  opensearch-node1:
    image: opensearchproject/opensearch:1.2.4
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_master_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.opensearch.rule=Host(`opensearch.${DOMAIN}`)"
      - "traefik.http.services.opensearch.loadbalancer.server.port=9200"
  opensearch-node2:
    image: opensearchproject/opensearch:1.2.4
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_master_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - proxy

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:1.2.0
    container_name: opensearch-dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]' # must be a string with no spaces when specified as an environment variable
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboards.rule=Host(`dashboards.${DOMAIN}`)"
      - "traefik.http.services.dashboards.loadbalancer.server.port=5601"

  logstash:
    container_name: logstash
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.2
    command: "logstash -f /usr/share/logstash/pipeline/logstash.conf --config.reload.automatic"
    volumes:
      - ./monitoring/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "127.0.0.1:5044:5044/udp"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - opensearch-node1
    networks:
      - proxy

networks:
  vpn-net:
  service-net:
  proxy:
