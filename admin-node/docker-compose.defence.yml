version: '3.8'
services:
  reverse-proxy:
    image: traefik:v2.6
    command:
      - "--api.dashboard=true"
      - "--api"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${HASH_ADMIN_PASS}"

    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  checker:
    image: explabs/ad-ctf-paas-checker
    container_name: checker
    restart: unless-stopped
    environment:
      - ADMIN_PASS=admin
      - MONGODB=mongo:27017
    volumes:
      - ./scripts:/scripts/
      - ./configs/config.yml:/checker/config.yml
    networks:
      - service-net
    depends_on:
      - rabbit

  rabbit:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=service
      - RABBITMQ_DEFAULT_PASS=${ADMIN_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - service-net

  exploits:
    image: explabs/ad-ctf-paas-exploits
    container_name: exploits
    restart: unless-stopped
    environment:
      - ADMIN_PASS=admin
      - MONGODB=mongo:27017
    depends_on:
      - rabbit
    volumes:
      - ./exploits:/service/exploits/
      - ./configs/config.yml:/service/config.yml
    networks:
      - service-net

  news:
    image: explabs/ad-ctf-paas-news
    container_name: news
    restart: unless-stopped
    depends_on:
      - rabbit
    environment:
      - ADMIN_PASS=admin
      - TELEGRAM_TOKEN=$TELEGRAM_TOKEN
      - TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID
    volumes:
      - ./news:/service/news/
      - ./configs/config.yml:/service/config.yml
    networks:
      - service-net

  malwaretotal:
    image: explabs/malwaretotal
    container_name: malwaretotal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.malwaretotal.rule=Host(`malwaretotal.${DOMAIN}`)"
    volumes:
      - ./malwares/malwares.yml:/app/malwares.yml

  api:
    image: explabs/ad-ctf-paas-api
    container_name: api
    environment:
      - ADMIN_PASS=${ADMIN_PASS}
      - SERVER_IP=${SERVER_IP}
      - OVPN_ADMIN=http://openvpn:9000
      - MONGODB=mongo:27017
      - REDIS=redis:6379
    #    ports:
    #      - "80:8080"
    volumes:
      - ./configs/config.yml:/api/config.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
    depends_on:
      - mongo
      - redis
      - ovpn-admin
      - openvpn
      - fileserver
      - rabbit
    networks:
      - service-net
      - vpn-net

  mongo:
    image: mongo:5.0
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${ADMIN_PASS}
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - service-net

  redis:
    image: redis:6.2-alpine
    container_name: redis
    command: redis-server --requirepass ${ADMIN_PASS}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data/
    networks:
      - service-net

  openvpn:
    image: flant/ovpn-admin:openvpn-1.7.5
    container_name: openvpn
    command: /etc/openvpn/setup/configure.sh
    cap_add:
      - NET_ADMIN
    ports:
      - "7777:1194" # for openvpn
      - "9000:9000" # for ovpn-admin because of network_mode
    volumes:
      - ./openvpn/setup/openvpn.conf:/etc/openvpn/setup/openvpn.conf
      - ./openvpn/easyrsa_master:/etc/openvpn/easyrsa
      - ./openvpn/ccd_master:/etc/openvpn/ccd
    networks:
      - vpn-net

  ovpn-admin:
    image: flant/ovpn-admin:1.7.5
    container_name: ovpn-admin
    command: /app/ovpn-admin --listen.port="9000" --ovpn.server="${SERVER_IP}:7777:tcp" --easyrsa.path="/mnt/easyrsa" --easyrsa.index-path="/mnt/easyrsa/pki/index.txt" --ccd --ccd.path="/mnt/ccd" --auth.password --auth.db="/mnt/easyrsa/pki/users.db"
    network_mode: service:openvpn
    volumes:
      - ./openvpn/easyrsa_master:/mnt/easyrsa
      - ./openvpn/ccd_master:/mnt/ccd

  fileserver:
    image: explabs/fileserver
    container_name: fileserver
    volumes:
      - ./tasks:/tasks
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fileserver.rule=Host(`fileserver.${DOMAIN}`)"
    restart: unless-stopped

volumes:
  mongo-data:
  redis-data:

networks:
  vpn-net:
  service-net:
